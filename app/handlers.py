import asyncio

from aiogram import Router, F

from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery, InputMediaPhoto, sticker , sticker_set


import app.keyboards as kb
from app.utils.states import states_texts, ConfirmationState, add_states_texts, send_message_after_delay, \
    send_message_after_delay2

router = Router()



@router.message(F.video)
async def get_video_id(message: Message):
    if message.video:
        video_id = message.video.file_id
        await message.reply(f"ID –≤–∞—à–µ–≥–æ –≤–∏–¥–µ–æ: {video_id}")


@router.message(F.photo)
async def get_photo(message: Message, state: FSMContext):
    await message.answer(f"id{message.photo[-1].file_id}")


@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer("–î–æ—Ä–æ–≥–æ–π –∫–æ–ª–ª–µ–≥–∞, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç–µ–±—è —Å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ–º –≤—Å–µ—Ö "
                         "—ç—Ç–∞–ø–æ–≤ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è!"
                         " –°–µ–≥–æ–¥–Ω—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ç–≤–æ–π –ø—É—Ç—å –≤ –∫–æ–º–ø–∞–Ω–∏–∏,"
                         " –∞ —è  ‚Äì —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫, –º–µ–Ω—è –∑–æ–≤—É—Ç BeeBot  –∏  –º–æ—è –∑–∞–¥–∞—á–∞ –ø–æ–º–æ—á—å "
                         "—Ç–µ–±–µ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –∫–æ–º–ø–∞–Ω–∏–∏ü•∞ü•∞ü•∞",
                         reply_markup=kb.main)


@router.callback_query(F.data == 'info')
async def get_info(callback: CallbackQuery):
    await callback.answer()
    await callback.message.edit_text("–ò—Ç–∞–∫, —á—Ç–æ –∂–µ –Ω–∞–º –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è:\n"
                                     "1. –ü–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–µ—á–µ–Ω—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤;\n"
                                     "2. –°–æ–±—Ä–∞—Ç—å –ø–∞–∫–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤;\n"
                                     "3. –ó–Ω–∞—Ç—å –¥–∞—Ç—É –≤—ã—Ö–æ–¥–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É –∏ –º–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã;\n"
                                     "4. –ù–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–µ–º—É HR –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∏—Ö.",
                                     reply_markup=kb.info)


@router.callback_query(F.data == 'docs')
async def get_docs(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer("–°–ø–∏—Å–æ–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –°–ë:\n"
                                  "1.–°–ø—Ä–∞–≤–∫–∞ 086;\n"
                                  "2.–°–ø—Ä–∞–≤–∫–∞ –æ—Ç –ú–í–î –æ –Ω–µ—Å—É–¥–∏–º–æ—Å—Ç–∏.\n"
                                  "3.–ê–Ω–∫–µ—Ç–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ (–ø—Ä–∏–∫–ª–µ–∏—Ç—å –æ–¥–Ω–æ —Ñ–æ—Ç–æ);\n"
                                  "5.–§–æ—Ç–æ —Ü–≤–µ—Ç–Ω—ã–µ, 2 —à—Ç., —Ä–∞–∑–º–µ—Ä 3–•4 —Å–º;\n"
                                  "6.–ö–æ–ø–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞;\n"
                                  "7.–ö–æ–ø–∏—è –≤–æ–µ–Ω–Ω–æ–≥–æ –±–∏–ª–µ—Ç–∞ (–¥–ª—è –º—É–∂—á–∏–Ω);\n"
                                  "8. –ù–æ–º–µ—Ä Beeline\n"
                                  "9. –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–µ —Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–∫—Å–∏ –∫–∞—Ä—Ç—ã\n"
                                  "–í—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞–¥–æ –æ—Ç–¥–∞—Ç—å —Å–≤–æ–µ–º—É HR –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–∫–∞–Ω –≤–µ—Ä—Å–∏–∏.",
                                  reply_markup=kb.docs)


@router.callback_query(F.data == 'command_help')
async def get_help(callback: CallbackQuery):
    await callback.answer()
    await callback.message.reply("–° —á–µ–º –∏–º–µ–Ω–Ω–æ –º–Ω–µ –≤–∞–º –ø–æ–º–æ—á—å?üôÇ", reply_markup=kb.help)


@router.callback_query(F.data == 'command_next')
async def next_step(callback: CallbackQuery, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        await callback.answer()
        await state.set_state(1)  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è 1
        await callback.message.answer(states_texts[1])
        await callback.message.answer(add_states_texts[1])
        scheduled_message = "–ü—Ä–∏–≤–µ—Ç! –¢—ã —Å–æ–±—Ä–∞–ª –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã?ü§î"
        # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ 5 –¥–Ω–µ–π
        delay_days = 5
        await asyncio.create_task(send_message_after_delay(callback.from_user.id, scheduled_message, delay_days))
    else:
        current_state = int(current_state)  # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ —á–∏—Å–ª–æ
        next_state = str(current_state + 1)
        await state.set_state(next_state)  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—èdfsdf


@router.callback_query(F.data == 'instruction_one')
async def get_instruction_one(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer("‚óΩ–°–ø—Ä–∞–≤–∫—É –º–æ–∂–Ω–æ –∑–∞–∫–∞–∑–∞—Ç—å —á–µ—Ä–µ–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –≤ –≥–æ—Å.–ø–æ—Ä—Ç–∞–ª–µ: portal.tunduk.kg \n"
                                  "–ü–æ—Å–ª–µ –∑–∞—è–≤–∫–∏ —Å–ø—Ä–∞–≤–∫–∞ –≤—ã–¥–∞–µ—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–∏ –æ—Ç 1-3 –¥–Ω–µ–π –ø–æ –∞–¥—Ä–µ—Å—É:"
                                  "–ö—É—Ä–º–∞–Ω–∂–∞–Ω –î–∞—Ç–∫–∞, 115. –¢–µ–ª. (0312) 369-417, (0312) 369-418", reply_markup=kb.step_one)


@router.callback_query(F.data == 'instruction_two')
async def get_instruction_two(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer("‚óΩ–ú–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é —Å–ø—Ä–∞–≤–∫—É –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –≤ –ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫–µ –ø–æ "
                                  "–º–µ—Å—Ç—É –ø—Ä–æ–ø–∏—Å–∫–∏ –∏–ª–∏ –≤ –ª—é–±–æ–º –ø–ª–∞—Ç–Ω–æ–º –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–º", reply_markup=kb.step_one)


@router.callback_query(F.data == 'instruction_third')
async def get_instruction_third(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer("‚óΩ–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–æ–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–æ–π—Ç–∏ –∫ –µ–¥–∏–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—É –≤ "
                                  "–†–µ—Å–ø—É–±–ª–∏–∫–∞–Ω—Å–∫–æ–º —Ü–µ–Ω—Ç—Ä–µ –ø—Å–∏—Ö–∏–∞—Ç—Ä–∏–∏ –∏ –Ω–∞—Ä–∫–æ–ª–æ–≥–∏–∏. –ê–¥—Ä–µ—Å: –ë–∞–π—Ç–∏–∫ –ë–∞–∞—Ç—ã—Ä–∞, 1–∞."
                                  " –õ–∏–±–æ –º–æ–∂–Ω–æ –∑–∞–∫–∞–∑–∞—Ç—å –≤ –≥–æ—Å. –ø–æ—Ä—Ç–∞–ª–µ: portal.tunduk.kg", reply_markup=kb.step_one)


@router.message(F.text == '–î–∞–ª—å—à–µ‚û°Ô∏è')
async def next_step(message: Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        await state.set_state(1)  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è 1
        await message.answer(states_texts[1])
        await message.answer(add_states_texts[1], reply_markup=kb.delete_keybord)
        scheduled_message = "–ü—Ä–∏–≤–µ—Ç! –¢—ã —Å–æ–±—Ä–∞–ª –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã?ü§î"
        # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ 5 –¥–Ω–µ–π
        delay_days = 5
        await asyncio.create_task(send_message_after_delay(message.chat.id, scheduled_message, delay_days))

    else:
        current_state = int(current_state)  # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ —á–∏—Å–ª–æ
        next_state = current_state + 1
        await state.set_state(next_state)  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        # await bot.delete_message(message.chat.id, message.message_id)
        if next_state == 2:
            await message.answer(states_texts[2])
            await message.answer(add_states_texts[2])
        elif next_state == 3:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏ —Ç–µ–∫—Å—Ç
            await message.answer(states_texts[3])
            await message.answer_photo(
                photo='AgACAgIAAxkBAAICtGYvuip5z8PgMJHOQamly42gVGPrAAII2zEbRCyASQKbWDGvFjGTAQADAgADeAADNAQ',
                caption=add_states_texts[3])
            await message.answer_video(video="BAACAgIAAxkBAAIHW2Y-HCU86x8dpGX_0jo64H_c8KrKAAIxSAACuYjxSUG0u3auXQcgNQQ")
            await message.answer_video(video="BAACAgIAAxkBAAIHXWY-HJgAAVNP3RUkw9UMBvAT-bnSHgACOkgAArmI8Umh63yvI4rvBzUE")
            await message.answer(add_states_texts[4], reply_markup=kb.delete_keybord)
            scheduled_message = ("–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —Ç–≤–æ–∏ –¥–µ–ª–∞?\n"
                                 "–¢–≤–æ–π Buddy –Ω–∞ —Å–≤—è–∑–∏ü§ó")

            delay_days = 1
            await asyncio.create_task(send_message_after_delay2(message.chat.id, scheduled_message, delay_days))
            await message.answer(add_states_texts[5], reply_markup=kb.menu_keyboard)
        else:
            await message.answer("–ë–æ–ª—å—à–µ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—èü•≤")


@router.callback_query(F.data == 'yes_docs')
async def get_yes_docs(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.answer("–û—Ç–ª–∏—á–Ω–æ!üòÉ", reply_markup=kb.step_one)


@router.callback_query(F.data == 'no_docs')
async def get_yes_docs(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.answer("–ü–æ—Ç–æ—Ä–æ–ø–∏—Å—å,—á—Ç–æ–±—ã –º—ã —É—Å–ø–µ–ª–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å —Ç–µ–±—è‚ùó")
    scheduled_message = "–ü—Ä–∏–≤–µ—Ç! –¢—ã —Å–æ–±—Ä–∞–ª –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã?ü§î"
    # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ 5 –¥–Ω–µ–π
    delay_days = 5
    await asyncio.create_task(send_message_after_delay(callback.from_user.id, scheduled_message, delay_days))


@router.message(F.text == '–ò–≤–µ–Ω—Ç—ã')
async def get_events(message: Message, state: FSMContext):
    await message.answer("–õ—É—á—à–µ –æ–¥–∏–Ω —Ä–∞–∑ —É–≤–∏–¥–µ—Ç—å, —á–µ–º —Å—Ç–æ —Ä–∞–∑ "
                         "—É—Å–ª—ã—à–∞—Ç—å. –ü–æ—ç—Ç–æ–º—É –ø–æ—Å–º–æ—Ç—Ä–∏ –∫–∞–∫–∏–µ –∏–≤–µ–Ω—Ç—ã"
                         "–ø—Ä–æ—Ö–æ–¥—è—Ç –≤ –Ω–∞—à–µ–π –ö–æ–º–ø–∞–Ω–∏–∏ –∏ –ø–æ—á–µ–º—É –º—ã —Ç–∞–∫"
                         "–ª—é–±–∏–º –Ω–∞—à—É –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—É—é –∫—É–ª—å—Ç—É—Ä—É."
                         "–ù–∞–¥–µ—é—Å—å —Ç—ã –ø—Ä–æ–Ω–∏–∫–Ω–µ—à—å—Å—è —Ç–µ–º, —á—Ç–æ –Ω–∞—Å"
                         "–æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –∏ –¥–µ–ª–∞–µ—Ç —Å–∏–ª—å–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–πüôÉüôÉüôÉ", reply_markup=kb.ivents)


@router.callback_query(F.data == "family_day")
async def get_family_day(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.answer(add_states_texts[6])


@router.callback_query(F.data == "love_day")
async def get_love_day(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.answer(add_states_texts[7])


@router.callback_query(F.data == "beestyle_day")
async def get_beestyle_day(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer("–•–æ—á—É –ø–æ–¥—Ä–æ–±–Ω–µ–µ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –Ω–∞—à–µ–π —Ç—Ä–∞–¥–∏—Ü–∏–∏ Beestyle:\n"
                                  "üü®Beestyle - —ç—Ç–æ —Ñ–ª–µ—à–º–æ–±, –∫–æ–≥–¥–∞ –º—ã –ø—Ä–∏—Ö–æ–¥–∏–º –Ω–∞ —Ä–∞–±–æ—Ç—É –≤ —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–¥–µ–∂–¥–µ.\n"
                                  "–£ –Ω–∞—Å –≤ –∫–æ–º–ø–∞–Ω–∏–∏ —É–∂–µ –ø—Ä–æ—à–ª–∏:\n"
                                  "üü®BeeStyle - –•–≠–õ–õ–û–£–ò–ù-–î–≠–ô\n"
                                  "üü®BeeStyle - –î–ï–ù–¨ –¶–í–ï–¢–ù–´–• –ù–û–°–ö–û–í\n"
                                  "üü®BeeStyle - –î–ï–ù–¨ –¶–í–ï–¢–ù–´–• –†–£–ë–ê–®–ï–ö\n"
                                  "üü®Beestyle –î–ï–ù–¨ –ß–ï–†–ù–û-–ñ–ï–õ–¢–´–• BEELINE –ù–û–°–ö–û–í!\n"
                                  "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É—á–∞—Å—Ç–≤—É–π —Å –∫–æ–º–∞–Ω–¥–æ–π –≤ Beestyle —Ñ–ª–µ—à–º–æ–±–µ!\n")
    photo_ids = [
        "AgACAgIAAxkBAAIJQmY-bUdh4R9dRKpgzV_lrKGa21REAAK42zEbuYjxSWooKlQjoEVaAQADAgADeAADNQQ",
        "AgACAgIAAxkBAAIJRGY-bWhHigNt3vnTjkaLhJkUaul4AAK62zEbuYjxSdBq5qdshtYzAQADAgADeQADNQQ",


    ]
    media = [InputMediaPhoto(media=photo_id) for photo_id in photo_ids]
    await callback.message.answer_media_group(media)


@router.message(F.text == "–û—Ñ–∏—Å")
async def get_offices(message: Message):
    await message.answer_photo(
        photo="AgACAgIAAxkBAAIHrWY-IjW15vvSvObp6QTEbFwvAAGtaQACHtoxG7mI8UmvQHctunWX_QEAAwIAA3kAAzUE",
        caption=add_states_texts[8], reply_markup=kb.offices)


@router.callback_query(F.data == "capsule_sky")
async def get_capsule_sky(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer_photo(
        photo="AgACAgIAAxkBAAIIBGY-QR3yy232RD4tSmMy_s6XYGWSAAKn2jEbuYjxSRJMNNAQio8MAQADAgADeQADNQQ",
        caption=add_states_texts[9]
    )


@router.callback_query(F.data == "locker_sky")
async def get_capsule_sky(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer_photo(
        photo="AgACAgIAAxkBAAIIBmY-Qbi_t_c2lZQ99l0tvlUEbSM7AAKo2jEbuYjxSWQ6OPrLmS-UAQADAgADeQADNQQ",
        caption=add_states_texts[10]
    )


@router.callback_query(F.data == "sky_lab")
async def get_capsule_sky(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer_photo(
        photo="AgACAgIAAxkBAAIICGY-QhLCBI6CZu701JJZHsGqRWVSAAKs2jEbuYjxSZyGzsQBqWt3AQADAgADeQADNQQ",
        caption=add_states_texts[11]
    )


@router.callback_query(F.data == "relax_sky")
async def get_relax_sky(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer(
        "‚ö´–ö–æ–Ω–µ—á–Ω–æ –∂–µ, –≤–∞–∂–Ω–æ –∏ —Ç–æ, —á—Ç–æ–±—ã"
        "—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –º–æ–≥–ª–∏ –æ—Ç–≤–ª–µ–∫–∞—Ç—å—Å—è –æ—Ç —Ä–∞–±–æ—Ç—ã."
        "–ò–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É —É –Ω–∞—Å –≤ SKY X –µ—Å—Ç—å –∫—É—Ö–Ω–∏,"
        "–∑–æ–Ω—ã –æ—Ç–¥—ã—Ö–∞, —Ç–µ—Ä—Ä–∞—Å—ã –∏ –¥–∞–∂–µ —Å–≤–æ—è"
        "–∫–æ—Ñ–µ–π–Ω—è, –≥–¥–µ —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –∫—É–ø–∏—Ç—å"
        "—Å–≤–µ–∂–∏–π –∫–æ—Ñ–µ –∏–ª–∏ —á–∞–π."
    )
    photo_ids = [
        "AgACAgIAAxkBAAIIa2Y-SuMs2kCKKaucTUG0_afEHqlgAALY2jEbuYjxSXrnn9LaxlJBAQADAgADeQADNQQ",
        "AgACAgIAAxkBAAIIy2Y-ZH6Rpm0mjKfYrJfBrROl7AHsAAJz2zEbuYjxSeKVuZgvdWPQAQADAgADeQADNQQ",
        "AgACAgIAAxkBAAIIzWY-ZJJ3ahbvSDx23BtuNO8wY4NaAAJ02zEbuYjxSXy1S1tbyemJAQADAgADeQADNQQ",
        "AgACAgIAAxkBAAIIz2Y-ZKY8jzN593vvpRg0N48ZMaPjAAJ12zEbuYjxSeyu0IohtUckAQADAgADeQADNQQ",
        "AgACAgIAAxkBAAII0WY-ZLuaStPphNxudzoISZgCK9pyAAJ32zEbuYjxSdisRUBCLpKEAQADAgADeQADNQQ"

    ]
    media = [InputMediaPhoto(media=photo_id) for photo_id in photo_ids]
    await callback.message.answer_media_group(media)


#
# # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ñ–∏—Å–æ–≤ –ø–æ—Å–ª–µ –≥—Ä—É–ø–ø—ã —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
# await message.answer(offices_text)


@router.message(F.text == "–£–≤–ª–µ—á–µ–Ω–∏—è")
async def get_hobbies(message: Message):
    await message.answer_photo(
        photo="AgACAgIAAxkBAAIJKWY-aFR1T17Q3jfC0uRqprXcrcbWAAKQ2zEbuYjxSffeHlwhNW0RAQADAgADeQADNQQ",
        caption="‚ö´–ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è –∫ —Ç–æ–º—É, —á—Ç–æ–±—ã —É –Ω–∞—à–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –±—ã–ª –±–∞–ª–∞–Ω—Å\n"
                "–º–µ–∂–¥—É —Ä–∞–±–æ—Ç–æ–π –∏ –ª–∏—á–Ω—ã–º–∏ —É–≤–ª–µ—á–µ–Ω–∏—è–º–∏. –ú—ã –≤–µ—Ä–∏–º, —á—Ç–æ —Ç–∞–∫–æ–π\n"
                "—Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω –≤ —Ç–æ–º, —á—Ç–æ–±—ã –µ–≥–æ —Ä–∞–±–æ—Ç–∞ –ø—Ä–∏–Ω–æ—Å–∏–ª–∞\n"
                "–ª—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ö–æ–º–ø–∞–Ω–∏–∏. –ò–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É –º—ã —Ä–∞–∑–≤–∏–≤–∞–µ–º\n"
                "—Å–∏—Å—Ç–µ–º—É –∫–ª—É–±–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –∫–æ–ª–ª–µ–≥–∞–º –ø—Ä–æ—Å—Ç–æ—Ä –¥–ª—è\n"
                "—Ä–∞–∑–≤–∏—Ç–∏—è –≤ —Å–∞–º—ã—Ö —Ä–∞–∑–Ω—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö:\n"
                "‚óæ–®–∞—Ö–º–∞—Ç—ã\n"
                "‚óæ–°—Ç—Ä–µ—Ç—á–∏–Ω–≥\n"
                "‚óæ–ù–∞—Å—Ç–æ–ª—å–Ω—ã–π —Ç–µ–Ω–Ω–∏—Å\n"
                "‚óæ–§—É—Ç–±–æ–ª\n"
                "–£–≤–µ—Ä–µ–Ω, —á—Ç–æ —Ç—ã –Ω–∞–π–¥–µ—à—å —Å–µ–±–µ –∑–∞–Ω—è—Ç–∏–µ –ø–æ –¥—É—à–µ."
    )


@router.message(F.text == "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞")
async def get_library(message: Message):
    await message.answer("‚ö´–û–±—É—á–µ–Ω–∏–µ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ ‚Äì –æ–¥–∏–Ω –∏–∑ –≤–∞–∂–Ω–µ–π—à–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤"
                         "–∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –∫—É–ª—å—Ç—É—Ä—ã. –ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –ª—É—á—à–∏–º"
                         "–ø–ª–æ—â–∞–¥–∫–∞–º –¥–ª—è –æ–Ω–ª–∞–π–Ω –æ–±—É—á–µ–Ω–∏—è:\n"
                         "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ Alpina, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ç–µ–±–µ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã"
                         "1000 –∫–Ω–∏–≥, —Å–∞–º–æ–≥–æ —Ä–∞–∑–Ω–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è.\n"
                         "–ê —Ç–∞–∫–∂–µ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ Courser–∞, –≥–¥–µ —Ç—ã —Å–º–æ–∂–µ—à—å –ø—Ä–æ–π—Ç–∏ –∫—É—Ä—Å—ã –æ—Ç"
                         "—Ç–æ–ø–æ–≤—ã—Ö —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–æ–≤ –∏ –∫–æ–º–ø–∞–Ω–∏–π\n"
                         "–£ –Ω–∞—Å –µ—â–µ –µ—Å—Ç—å –∂–∏–≤–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –Ω–∞ 2-–º —ç—Ç–∞–∂–µ. –¢—ã –º–æ–∂–µ—à—å –±—Ä–∞—Ç—å"
                         "–∫–Ω–∏–≥–∏ –∏ –ø—Ä–æ–∫–∞—á–∏–≤–∞—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è.\n"
                         "–ú—ã —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º —Ç–µ–±–µ —ç—Ç–æ –≤—Å–µ –ø–æ–∫–∞–∂–µ–º, –∫–æ–≥–¥–∞ —É–≤–∏–¥–∏–º—Å—è –≤"
                         "–Ω–∞—à–µ–º –æ—Ñ–∏—Å–µ. –î–æ —Å–∫–æ—Ä–æ–π –≤—Å—Ç—Ä–µ—á–∏!\n")
    await message.answer_photo(
        photo="AgACAgIAAxkBAAIJLmY-a-LIBDWSr2lhsP-u_RZPtQ7zAAKP2zEbuYjxSXbhA6rUgdP6AQADAgADeQADNQQ"
    )


@router.message(F.text == "Bbox")
async def get_bbox(message: Message):
    await message.answer("‚ö´–¢–∞–∫–∂–µ –ö–æ–º–ø–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏–ª–∞ —Å–∏—Å—Ç–µ–º—É –Ω–µ –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–π"
                         "–º–æ—Ç–∏–≤–∞—Ü–∏–∏ Benefit box –∏–ª–∏ –∂–µ BBox. –≠—Ç–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ"
                         "–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–º –Ω–µ –ø–æ–¥—Ö–æ–¥—è—Ç —É—Å–ª–æ–≤–∏—è"
                         "–¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ–≥–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è (–î–ú–°)."
                         "–í BBox –≤—ã —Å–∞–º–∏ –≤—ã–±–∏—Ä–∞–µ—Ç–µ —É—Å–ª—É–≥—É, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –±—ã—Ç—å"
                         "–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∞ —Å–æ –ª—å–≥–æ—Ç–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏:"
                         "–ê–±–æ–Ω–µ–º–µ–Ω—Ç –≤ –∑–∞–ª, –æ–ø–ª–∞—Ç–∞ –∑–∞ –ø—Ä–æ–µ–∑–¥ –≤ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ"
                         "–∏–ª–∏ –∂–µ —Å–µ—Ä–≤–∏—Å—ã —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—è.")
